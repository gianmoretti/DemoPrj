package it.gianmo.demonodo.ws.psp;

import java.net.MalformedURLException;
import java.net.URL;
import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.5
 * 2016-05-28T20:39:19.764+02:00
 * Generated source version: 3.1.5
 * 
 */
@WebServiceClient(name = "FespPspService", 
                  wsdlLocation = "file:/C:/Users/Utente/IdeaProjects/DemoPrj/src/main/resources/wsdl/psp/PspPerNodo.wsdl",
                  targetNamespace = "http://PuntoAccessoPSP.spcoop.gov.it") 
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00", comments = "Apache CXF 3.1.5")
public class FespPspService extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public final static QName SERVICE = new QName("http://PuntoAccessoPSP.spcoop.gov.it", "FespPspService");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public final static QName PSPPort = new QName("http://PuntoAccessoPSP.spcoop.gov.it", "PSPPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/Utente/IdeaProjects/DemoPrj/src/main/resources/wsdl/psp/PspPerNodo.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(FespPspService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/Utente/IdeaProjects/DemoPrj/src/main/resources/wsdl/psp/PspPerNodo.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPspService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns FespPsp
     */
    @WebEndpoint(name = "PSPPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPsp getPSPPort() {
        return super.getPort(PSPPort, FespPsp.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FespPsp
     */
    @WebEndpoint(name = "PSPPort")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2016-05-28T20:39:19.764+02:00")
    public FespPsp getPSPPort(WebServiceFeature... features) {
        return super.getPort(PSPPort, FespPsp.class, features);
    }

}
